name: Auto Deploy via install.sh

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy_marzban:
        description: 'Deploy Marzban VPN server'
        required: false
        default: 'true'
        type: choice
        options: ['true','false']

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$VPS_HOST" >> ~/.ssh/known_hosts

      - name: Deploy using install.sh
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          COCKPIT_PASSWORD: ${{ secrets.COCKPIT_PASSWORD }}
          MARZBAN_PANEL_PORT: ${{ secrets.MARZBAN_PANEL_PORT }}
          XRAY_PORT: ${{ secrets.XRAY_PORT }}
          INPUT_DEPLOY: ${{ github.event.inputs.deploy_marzban }}
        run: |
          set -euo pipefail
          DEPLOY_MARZBAN=${INPUT_DEPLOY:-true}

          ssh -o StrictHostKeyChecking=no "${VPS_USER}@${VPS_HOST}" <<'EOSH'
          set -e
          # Export environment for install.sh
          export DOMAIN_NAME="${DOMAIN_NAME}"
          export ADMIN_EMAIL="${ADMIN_EMAIL}"
          if [ -n "${COCKPIT_PASSWORD}" ]; then export COCKPIT_PASSWORD="${COCKPIT_PASSWORD}"; fi
          export DEPLOY_MARZBAN="${DEPLOY_MARZBAN}"
          if [ -n "${MARZBAN_PANEL_PORT}" ]; then export MARZBAN_PANEL_PORT="${MARZBAN_PANEL_PORT}"; fi
          if [ -n "${XRAY_PORT}" ]; then export XRAY_PORT="${XRAY_PORT}"; fi

          curl -fsSL https://raw.githubusercontent.com/KomarovAI/vps-nginx-certbot-cockpit-setup/main/install.sh -o /tmp/vps-install.sh
          chmod +x /tmp/vps-install.sh
          /tmp/vps-install.sh

          echo "Deployment finished."
          /root/check-services.sh || true
          EOSH
