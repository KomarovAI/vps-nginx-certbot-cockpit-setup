name: Terraform Apply

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Validate Terraform HCL
        working-directory: terraform
        run: |
          terraform fmt -check -recursive || true
          terraform validate

      - name: Copy root scripts into terraform/files (ensure sync)
        run: |
          mkdir -p terraform/files/marzban
          cp install.sh terraform/files/install.sh
          cp setup-memory.sh terraform/files/setup-memory.sh
          cp update.sh terraform/files/update.sh
          
          # Create Marzban configs dynamically from templates
          envsubst < templates/marzban-docker-compose.yml > terraform/files/marzban/docker-compose.yml
          envsubst < templates/marzban-nginx.conf > terraform/files/marzban/marzban.conf

      - name: Terraform Plan
        env:
          TF_VAR_vps_host: ${{ secrets.VPS_HOST }}
          TF_VAR_vps_user: ${{ secrets.VPS_USER }}
          TF_VAR_ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          TF_VAR_domain_name: ${{ secrets.DOMAIN_NAME }}
          TF_VAR_admin_email: ${{ secrets.ADMIN_EMAIL }}
          TF_VAR_cockpit_password: ${{ secrets.COCKPIT_PASSWORD }}
          TF_VAR_marzban_username: ${{ secrets.MARZBAN_USERNAME }}
          TF_VAR_marzban_password: ${{ secrets.MARZBAN_PASSWORD }}
        working-directory: terraform
        run: terraform plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        env:
          TF_VAR_vps_host: ${{ secrets.VPS_HOST }}
          TF_VAR_vps_user: ${{ secrets.VPS_USER }}
          TF_VAR_ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          TF_VAR_domain_name: ${{ secrets.DOMAIN_NAME }}
          TF_VAR_admin_email: ${{ secrets.ADMIN_EMAIL }}
          TF_VAR_cockpit_password: ${{ secrets.COCKPIT_PASSWORD }}
          TF_VAR_marzban_username: ${{ secrets.MARZBAN_USERNAME }}
          TF_VAR_marzban_password: ${{ secrets.MARZBAN_PASSWORD }}
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: Collect logs on failure
        if: failure()
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p logs
          echo "$SSH_PRIVATE_KEY" > id_rsa
          chmod 600 id_rsa
          ssh -o StrictHostKeyChecking=no -i id_rsa "$VPS_USER@$VPS_HOST" \
            'sudo journalctl -u nginx --no-pager | tail -n 500' > logs/nginx.journal.log || true
          ssh -o StrictHostKeyChecking=no -i id_rsa "$VPS_USER@$VPS_HOST" \
            'sudo tail -n 500 /var/log/nginx/*.error.log' > logs/nginx.error.tail.log || true
          ssh -o StrictHostKeyChecking=no -i id_rsa "$VPS_USER@$VPS_HOST" \
            'sudo docker ps; sudo docker-compose -f /opt/marzban/docker-compose.yml logs --tail=300' > logs/marzban.logs.txt || true

      - name: Upload logs artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: deploy-logs
          path: logs/**