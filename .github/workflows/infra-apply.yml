name: VPS Infrastructure Deploy v3.2 - Idempotent

on:
  push:
    branches: [ main, feat/custom-marzban-container ]
  workflow_dispatch:
    inputs:
      deployment_type:
        description: 'Deployment type'
        required: true
        default: 'full'
        type: choice
        options: ['full','marzban-only','base-only','update']
      force_rebuild:
        description: 'Force rebuild containers'
        required: false
        default: false
        type: boolean
      skip_health_check:
        description: 'Skip final health check'
        required: false
        default: false
        type: boolean

env:
  TERRAFORM_VERSION: "1.8.5"

jobs:
  validate-secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate required secrets
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        run: |
          set -e
          for v in VPS_HOST VPS_USER SSH_PRIVATE_KEY DOMAIN_NAME ADMIN_EMAIL; do
            [ -n "${!v}" ] || { echo "Missing secret: $v"; exit 1; }
          done

  deploy-marzban:
    runs-on: ubuntu-latest
    needs: validate-secrets
    steps:
      - uses: actions/checkout@v4
      - name: Sync repo to server
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key
          rsync -avz --delete --exclude='.git' -e "ssh -o StrictHostKeyChecking=no -i /tmp/deploy_key" . "$VPS_USER@$VPS_HOST:/opt/marzban-deployment/"
          ssh -o StrictHostKeyChecking=no -i /tmp/deploy_key "$VPS_USER@$VPS_HOST" "sudo git config --global --add safe.directory /opt/marzban-deployment || true"
      - name: Login to GHCR (optional)
        if: ${{ secrets.GHCR_USERNAME != '' && secrets.GHCR_TOKEN != '' }}
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: |
          echo "$SSH_PRIVATE_KEY" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key
          ssh -o StrictHostKeyChecking=no -i /tmp/deploy_key "$VPS_USER@$VPS_HOST" \
            "echo $GHCR_TOKEN | docker login ghcr.io -u $GHCR_USERNAME --password-stdin || true"
      - name: Run idempotent install (marzban-only)
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        run: |
          echo "$SSH_PRIVATE_KEY" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key
          ssh -o StrictHostKeyChecking=no -i /tmp/deploy_key "$VPS_USER@$VPS_HOST" \
            "DOMAIN_NAME='$DOMAIN_NAME' ADMIN_EMAIL='$ADMIN_EMAIL' DEPLOY_MARZBAN='true' FORCE_REBUILD='${{ github.event.inputs.force_rebuild }}'" \
            'bash -s' <<'EOF'
            set -e
            cd /opt/marzban-deployment
            chmod +x install.sh || true
            sudo -E ./install.sh
            EOF
      - name: Health check
        if: github.event.inputs.skip_health_check != 'true'
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
        run: |
          echo "$SSH_PRIVATE_KEY" > /tmp/health_key
          chmod 600 /tmp/health_key
          code=$(ssh -o StrictHostKeyChecking=no -i /tmp/health_key "$VPS_USER@$VPS_HOST" "curl -sk -o /dev/null -w '%{http_code}' https://$DOMAIN_NAME:8000 || echo 000")
          echo "Marzban panel HTTPS: $code"
