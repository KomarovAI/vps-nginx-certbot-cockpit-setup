name: Deploy to VPS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        VPS_HOST: ${{ secrets.VPS_HOST }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "$VPS_HOST" >> ~/.ssh/known_hosts

    - name: Deploy to VPS
      env:
        VPS_HOST: ${{ secrets.VPS_HOST }}
        VPS_USER: ${{ secrets.VPS_USER }}
        DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
        ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        VPS_IP: ${{ secrets.VPS_IP }}
        COCKPIT_PASSWORD: ${{ secrets.COCKPIT_PASSWORD }}
        MARZBAN_USERNAME: ${{ secrets.MARZBAN_USERNAME }}
        MARZBAN_PASSWORD: ${{ secrets.MARZBAN_PASSWORD }}
      run: |
        ssh "$VPS_USER@$VPS_HOST" << 'ENDSSH'
          set -e
          sudo mkdir -p /opt/vps-setup
          cd /opt/vps-setup
          if [ -d .git ]; then git pull origin main || true; else git clone https://github.com/KomarovAI/vps-nginx-certbot-cockpit-setup.git .; fi

          export DOMAIN_NAME="${DOMAIN_NAME}"
          export ADMIN_EMAIL="${ADMIN_EMAIL}"
          export VPS_IP="${VPS_IP}"
          export COCKPIT_PASSWORD="${COCKPIT_PASSWORD}"
          export MARZBAN_USERNAME="${MARZBAN_USERNAME}"
          export MARZBAN_PASSWORD="${MARZBAN_PASSWORD}"

          chmod +x install.sh
          sudo -E ./install.sh
        ENDSSH

    - name: Verify deployment
      env:
        VPS_HOST: ${{ secrets.VPS_HOST }}
        VPS_USER: ${{ secrets.VPS_USER }}
        DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
      run: |
        ssh "$VPS_USER@$VPS_HOST" << 'ENDSSH'
          sudo /root/check-services.sh || true
          curl -I "https://${DOMAIN_NAME}" -m 10 || true
          curl -I "https://${DOMAIN_NAME}:9090" -k -m 10 || true
        ENDSSH

  marzban:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH for Marzban
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$VPS_HOST" >> ~/.ssh/known_hosts

      - name: Deploy Marzban via Docker Compose
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          MARZBAN_USERNAME: ${{ secrets.MARZBAN_USERNAME }}
          MARZBAN_PASSWORD: ${{ secrets.MARZBAN_PASSWORD }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        run: |
          ssh "$VPS_USER@$VPS_HOST" << 'ENDSSH'
            set -e
            
            sudo mkdir -p /opt/marzban
            cd /opt/marzban
            
            if [ -d .git ]; then
              sudo git pull origin main
            else
              sudo git clone https://github.com/KomarovAI/vps-nginx-certbot-cockpit-setup.git .
            fi
            
            sudo cp -r marzban/* . || echo "Warning: marzban directory not found"
            
            if [ ! -f "docker-compose.yml" ]; then
              echo "Error: docker-compose.yml not found in marzban directory"
              exit 1
            fi
            
            export MARZBAN_USERNAME="${MARZBAN_USERNAME:-admin}"
            export MARZBAN_PASSWORD="${MARZBAN_PASSWORD}"
            export DOMAIN_NAME="${DOMAIN_NAME}"
            
            sudo -E docker-compose down || true
            sudo -E docker-compose up -d
            sudo docker-compose ps
            
            sleep 5
            if ! sudo docker ps | grep -q marzban; then
              echo "Error: Marzban container failed to start"
              sudo docker-compose logs
              exit 1
            fi
            
            VPN_SUBDOMAIN="vpn.${DOMAIN_NAME}"
            sudo sed -i "s/vpn\.botinger789298\.work\.gd/${VPN_SUBDOMAIN}/g" marzban.conf || true
            
            sudo ln -sf /opt/marzban/marzban.conf /etc/nginx/sites-available/marzban.conf
            sudo ln -sf /etc/nginx/sites-available/marzban.conf /etc/nginx/sites-enabled/marzban.conf
            
            sudo certbot --nginx -d "${VPN_SUBDOMAIN}" --email "${ADMIN_EMAIL}" --agree-tos --no-eff-email --redirect --non-interactive || true
            
            sudo nginx -t && sudo systemctl reload nginx
            echo "âœ… Marzban deployed at https://${VPN_SUBDOMAIN}"
          ENDSSH
