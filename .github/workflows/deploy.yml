name: Deploy to VPS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        VPS_HOST: ${{ secrets.VPS_HOST }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "$VPS_HOST" >> ~/.ssh/known_hosts

    - name: Deploy to VPS
      env:
        VPS_HOST: ${{ secrets.VPS_HOST }}
        VPS_USER: ${{ secrets.VPS_USER }}
        DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
        ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        VPS_IP: ${{ secrets.VPS_IP }}
        COCKPIT_PASSWORD: ${{ secrets.COCKPIT_PASSWORD }}
      run: |
        ssh "$VPS_USER@$VPS_HOST" << 'ENDSSH'
          set -e
          sudo mkdir -p /opt/vps-setup
          cd /opt/vps-setup
          if [ -d .git ]; then git pull origin main || true; else git clone https://github.com/KomarovAI/vps-nginx-certbot-cockpit-setup.git .; fi

          export DOMAIN_NAME="${DOMAIN_NAME}"
          export ADMIN_EMAIL="${ADMIN_EMAIL}"
          export VPS_IP="${VPS_IP}"
          export COCKPIT_PASSWORD="${COCKPIT_PASSWORD}"

          chmod +x install.sh
          sudo -E ./install.sh
        ENDSSH

    - name: Verify deployment
      env:
        VPS_HOST: ${{ secrets.VPS_HOST }}
        VPS_USER: ${{ secrets.VPS_USER }}
        DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
      run: |
        ssh "$VPS_USER@$VPS_HOST" << 'ENDSSH'
          sudo /root/check-services.sh || true
          curl -I "https://${DOMAIN_NAME}" -m 10 || true
          curl -I "https://${DOMAIN_NAME}:9090" -k -m 10 || true
        ENDSSH
