    log INFO "Repository exists, updating..."
    git fetch --all || log WARN "Git fetch failed, continuing..."
    git reset --hard origin/main || log WARN "Git reset failed, continuing..."
    git pull origin main || log WARN "Git pull failed, continuing..."
  else
    log INFO "Cloning fresh repository..."
    # Убеждаемся, что директория пустая перед клонированием
    rm -rf ./* ./.* 2>/dev/null || true
    git clone -b main https://github.com/KomarovAI/vps-nginx-certbot-cockpit-setup.git . || {
      log ERROR "Git clone failed"; return 1; }
  fi
  
  cd "$MARZBAN_DIR/marzban" || { log ERROR "marzban directory missing after clone/update"; return 1; }
  
  # ====== НАСТРОЙКА ОКРУЖЕНИЯ ДЛЯ КАСТОМНОГО КОНТЕЙНЕРА v4.0 ======
  log INFO "Configuring environment for Custom Marzban v4.0..."
  cat > .env <<EOF
# Generated by install.sh v4.0 $(date)
DOMAIN_NAME=${DOMAIN_NAME}
ADMIN_EMAIL=${ADMIN_EMAIL}
# Marzban Panel Config
MARZBAN_PANEL_PORT=${MARZBAN_PANEL_PORT}
MARZBAN_HOST=${DOMAIN_NAME}
# Auto-Admin Setup (v4.0 NEW!)
MARZBAN_ADMIN_USERNAME=${MARZBAN_ADMIN_USERNAME:-admin}
MARZBAN_ADMIN_PASSWORD=${MARZBAN_ADMIN_PASSWORD:-}
# XRAY Configuration
XRAY_PORT=${XRAY_PORT}
# XRAY Reality Settings
XRAY_REALITY_PRIVATE_KEY=${XRAY_REALITY_PRIVATE_KEY:-}
XRAY_REALITY_SHORT_IDS=${XRAY_REALITY_SHORT_IDS:-}
XRAY_REALITY_SERVER_NAMES=${XRAY_REALITY_SERVER_NAMES:-google.com,www.google.com}
# Database & Protocols
MARZBAN_DB_URL=sqlite:////var/lib/marzban/db.sqlite3
MARZBAN_QUIC=true
XRAY_VLESS_REALITY=true
XRAY_GRPC_ENABLE=true
XRAY_JSON=/etc/xray/config.json
# Automation Flags (v4.0)
AUTO_INIT_DB=true
AUTO_CREATE_ADMIN=true
FORCE_CLEAN_START=${FORCE_CLEAN_START:-false}
# Build Info
CUSTOM_BUILD=true
VERSION=4.0
BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
EOF
  # Убеждаемся, что директории существуют
  mkdir -p ./logs ./custom-configs
  mkdir -p /var/lib/marzban /etc/xray /etc/opt/marzban/config-backup
  chmod -R 755 ./logs ./custom-configs 2>/dev/null || true
  
  # ====== СБОРКА И ЗАПУСК КАСТОМНОГО КОНТЕЙНЕРА v4.0 ======
  log INFO "Building and starting Custom Marzban v4.0..."
  
  # Проверяем наличие override файла для кастомной сборки
  local compose_files="-f docker-compose.yml"
  if [[ -f ../docker-compose.override.yml ]]; then
    log INFO "Found docker-compose.override.yml, using custom build"
    compose_files="-f docker-compose.yml -f ../docker-compose.override.yml"
  else
    log INFO "No override found, using pre-built image"
  fi
  
  # Сборка и запуск
  if [[ -f Makefile ]]; then 
    log INFO "Using Makefile for build and deployment..."
    make clean || true
    make build || docker-compose $compose_files build --no-cache --pull
    make up || docker-compose $compose_files up -d
  else 
    log INFO "Using docker-compose for build and deployment..."
    docker-compose $compose_files down 2>/dev/null || true
    docker-compose $compose_files build --no-cache --pull
    docker-compose $compose_files up -d
  fi
  
  # ====== АВТОМАТИЗАЦИЯ v4.0: ИСПОЛЬЗУЕМ manage.sh ======
  chmod +x manage.sh || true
  
  log INFO "Starting Custom Marzban v4.0 automated initialization..."
  if [[ -x ./manage.sh ]]; then
    log INFO "Using manage.sh auto-setup for full automation..."
    ./manage.sh auto-setup || {
      log WARN "manage.sh auto-setup failed, trying manual start..."
      ./manage.sh start || log ERROR "Manual start also failed"
    }
  else
    log WARN "manage.sh not found or not executable, using manual approach..."
    sleep 20
    
    # Создание админа, если заданы credentials
    if [[ -n "${MARZBAN_ADMIN_USERNAME:-}" && -n "${MARZBAN_ADMIN_PASSWORD:-}" ]]; then
      log INFO "Setting up Marzban admin: ${MARZBAN_ADMIN_USERNAME}"
      sleep 10  # Дополнительное ожидание готовности БД
